name: Teste automatizado

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Instalar dependências
        run: |
          cd "GXSteel Back-end"
          npm install

      - name: Executar testes
        env:
          PORT: ${{ secrets.PORT }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
        run: |
          cd "GXSteel Back-end"
          npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Deploy Front-end
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 15022
          source: "GXSteel Front-end/build/"
          target: "/var/www/html/gxsteel/"

      - name: Deploy Back-end (sem .env)
        run: |
          tar --exclude='.env' -czf backend.tar.gz -C "GXSteel Back-end" .
        shell: bash

      - name: Copiar Back-end pro servidor
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 15022
          source: "backend.tar.gz"
          target: "/tmp/backend.tar.gz"

      - name: Extrair e substituir Back-end no servidor (sem .env)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 15022
          script: |
            cd /opt/gxsteel-backend
            find . -type f ! -name '.env' -delete
            tar -xzf /tmp/backend.tar.gz -C .
            rm /tmp/backend.tar.gz

      - name: Reiniciar container docker do back-end
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 15022
          script: |
            docker restart gxsteel-backend
